/*
 * generated by Xtext 2.24.0
 */
grammar InternalXContext;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ac.soton.xeventb.xcontext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.xeventb.xcontext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.xeventb.xcontext.services.XContextGrammarAccess;

}

@parser::members {

 	private XContextGrammarAccess grammarAccess;

    public InternalXContextParser(TokenStream input, XContextGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "XContext";
   	}

   	@Override
   	protected XContextGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleXContext
entryRuleXContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXContextRule()); }
	iv_ruleXContext=ruleXContext
	{ $current=$iv_ruleXContext.current; }
	EOF;

// Rule XContext
ruleXContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXContextAccess().getContextAction_0(),
					$current);
			}
		)
		otherlv_1='context'
		{
			newLeafNode(otherlv_1, grammarAccess.getXContextAccess().getContextKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXContextAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xcontext.XContext.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getXContextAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXContextRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXContextAccess().getExtendsContextCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				otherlv_5='sets'
				{
					newLeafNode(otherlv_5, grammarAccess.getXContextAccess().getSetsKeyword_4_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXContextAccess().getOrderedChildrenXCarrierSetParserRuleCall_4_0_1_0());
						}
						lv_orderedChildren_6_0=ruleXCarrierSet
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXContextRule());
							}
							add(
								$current,
								"orderedChildren",
								lv_orderedChildren_6_0,
								"ac.soton.xeventb.xcontext.XContext.XCarrierSet");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_7='constants'
				{
					newLeafNode(otherlv_7, grammarAccess.getXContextAccess().getConstantsKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXContextAccess().getOrderedChildrenXConstantParserRuleCall_4_1_1_0());
						}
						lv_orderedChildren_8_0=ruleXConstant
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXContextRule());
							}
							add(
								$current,
								"orderedChildren",
								lv_orderedChildren_8_0,
								"ac.soton.xeventb.xcontext.XContext.XConstant");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_9='constant'
				{
					newLeafNode(otherlv_9, grammarAccess.getXContextAccess().getConstantKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXContextAccess().getOrderedChildrenXTypedConstantParserRuleCall_4_2_1_0());
						}
						lv_orderedChildren_10_0=ruleXTypedConstant
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXContextRule());
							}
							add(
								$current,
								"orderedChildren",
								lv_orderedChildren_10_0,
								"ac.soton.xeventb.xcontext.XContext.XTypedConstant");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getXContextAccess().getOrderedChildrenXRecordParserRuleCall_4_3_0());
					}
					lv_orderedChildren_11_0=ruleXRecord
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXContextRule());
						}
						add(
							$current,
							"orderedChildren",
							lv_orderedChildren_11_0,
							"ac.soton.xeventb.xcontext.XContext.XRecord");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getXContextAccess().getOrderedChildrenXSingleAxiomParserRuleCall_4_4_0());
					}
					lv_orderedChildren_12_0=ruleXSingleAxiom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXContextRule());
						}
						add(
							$current,
							"orderedChildren",
							lv_orderedChildren_12_0,
							"ac.soton.xeventb.xcontext.XContext.XSingleAxiom");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='end'
		{
			newLeafNode(otherlv_13, grammarAccess.getXContextAccess().getEndKeyword_5());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleXCarrierSet
entryRuleXCarrierSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCarrierSetRule()); }
	iv_ruleXCarrierSet=ruleXCarrierSet
	{ $current=$iv_ruleXCarrierSet.current; }
	EOF;

// Rule XCarrierSet
ruleXCarrierSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXCarrierSetAccess().getCarrierSetAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXCarrierSetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXCarrierSetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xcontext.XContext.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXConstant
entryRuleXConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXConstantRule()); }
	iv_ruleXConstant=ruleXConstant
	{ $current=$iv_ruleXConstant.current; }
	EOF;

// Rule XConstant
ruleXConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXConstantAccess().getConstantAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXConstantAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xcontext.XContext.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXTypedConstant
entryRuleXTypedConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXTypedConstantRule()); }
	iv_ruleXTypedConstant=ruleXTypedConstant
	{ $current=$iv_ruleXTypedConstant.current; }
	EOF;

// Rule XTypedConstant
ruleXTypedConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXTypedConstantAccess().getTypedConstantAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXTypedConstantAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXTypedConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xcontext.XContext.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getXTypedConstantAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXTypedConstantAccess().getTypeXTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruleXType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXTypedConstantRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"ac.soton.xeventb.xcontext.XContext.XType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getXTypedConstantAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXTypedConstantAccess().getValueXFormulaParserRuleCall_3_1_0());
					}
					lv_value_5_0=ruleXFormula
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXTypedConstantRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"ac.soton.xeventb.xcontext.XContext.XFormula");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleXSingleAxiom
entryRuleXSingleAxiom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSingleAxiomRule()); }
	iv_ruleXSingleAxiom=ruleXSingleAxiom
	{ $current=$iv_ruleXSingleAxiom.current; }
	EOF;

// Rule XSingleAxiom
ruleXSingleAxiom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSingleAxiomAccess().getAxiomAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_theorem_1_0='theorem'
					{
						newLeafNode(lv_theorem_1_0, grammarAccess.getXSingleAxiomAccess().getTheoremTheoremKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXSingleAxiomRule());
						}
						setWithLastConsumed($current, "theorem", lv_theorem_1_0 != null, "theorem");
					}
				)
			)
			    |
			otherlv_2='axiom'
			{
				newLeafNode(otherlv_2, grammarAccess.getXSingleAxiomAccess().getAxiomKeyword_1_1());
			}
		)
		(
			(
				lv_name_3_0=RULE_XLABEL
				{
					newLeafNode(lv_name_3_0, grammarAccess.getXSingleAxiomAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXSingleAxiomRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"ac.soton.xeventb.xcontext.XContext.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXSingleAxiomAccess().getPredicateXFormulaParserRuleCall_3_0());
				}
				lv_predicate_4_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSingleAxiomRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_4_0,
						"ac.soton.xeventb.xcontext.XContext.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXFormula
entryRuleXFormula returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXFormulaRule()); }
	iv_ruleXFormula=ruleXFormula
	{ $current=$iv_ruleXFormula.current.getText(); }
	EOF;

// Rule XFormula
ruleXFormula returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_IDENTIFIER_KEYWORDParserRuleCall_0());
		}
		this_EVENTB_IDENTIFIER_KEYWORD_0=ruleEVENTB_IDENTIFIER_KEYWORD
		{
			$current.merge(this_EVENTB_IDENTIFIER_KEYWORD_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_PREDICATE_SYMBOLSParserRuleCall_1());
		}
		this_EVENTB_PREDICATE_SYMBOLS_1=ruleEVENTB_PREDICATE_SYMBOLS
		{
			$current.merge(this_EVENTB_PREDICATE_SYMBOLS_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_EXPRESSION_SYMBOLSParserRuleCall_2());
		}
		this_EVENTB_EXPRESSION_SYMBOLS_2=ruleEVENTB_EXPRESSION_SYMBOLS
		{
			$current.merge(this_EVENTB_EXPRESSION_SYMBOLS_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_3=RULE_ID
		{
			$current.merge(this_ID_3);
		}
		{
			newLeafNode(this_ID_3, grammarAccess.getXFormulaAccess().getIDTerminalRuleCall_3());
		}
		    |
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getXFormulaAccess().getINTTerminalRuleCall_4());
		}
		    |
		this_UNTRANSLATED_TOKEN_5=RULE_UNTRANSLATED_TOKEN
		{
			$current.merge(this_UNTRANSLATED_TOKEN_5);
		}
		{
			newLeafNode(this_UNTRANSLATED_TOKEN_5, grammarAccess.getXFormulaAccess().getUNTRANSLATED_TOKENTerminalRuleCall_5());
		}
	)+
;

// Entry rule entryRuleXType
entryRuleXType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXTypeRule()); }
	iv_ruleXType=ruleXType
	{ $current=$iv_ruleXType.current.getText(); }
	EOF;

// Rule XType
ruleXType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXTypeAccess().getXTypePrimitiveParserRuleCall_0());
		}
		this_XTypePrimitive_0=ruleXTypePrimitive
		{
			$current.merge(this_XTypePrimitive_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getXTypeAccess().getXTYPEOPERATORParserRuleCall_1_0());
			}
			this_XTYPEOPERATOR_1=ruleXTYPEOPERATOR
			{
				$current.merge(this_XTYPEOPERATOR_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getXTypeAccess().getXTypePrimitiveParserRuleCall_1_1());
			}
			this_XTypePrimitive_2=ruleXTypePrimitive
			{
				$current.merge(this_XTypePrimitive_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleXTYPEOPERATOR
entryRuleXTYPEOPERATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXTYPEOPERATORRule()); }
	iv_ruleXTYPEOPERATOR=ruleXTYPEOPERATOR
	{ $current=$iv_ruleXTYPEOPERATOR.current.getText(); }
	EOF;

// Rule XTYPEOPERATOR
ruleXTYPEOPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\u2194'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getLeftRightArrowKeyword_0());
		}
		    |
		kw='\uE100'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getPrivateUseAreaE100Keyword_1());
		}
		    |
		kw='\uE101'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getPrivateUseAreaE101Keyword_2());
		}
		    |
		kw='\uE102'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getPrivateUseAreaE102Keyword_3());
		}
		    |
		kw='\u21F8'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsArrowWithVerticalStrokeKeyword_4());
		}
		    |
		kw='\u2192'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsArrowKeyword_5());
		}
		    |
		kw='\u2914'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsArrowWithTailWithVerticalStrokeKeyword_6());
		}
		    |
		kw='\u21A3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsArrowWithTailKeyword_7());
		}
		    |
		kw='\u2900'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsTwoHeadedArrowWithVerticalStrokeKeyword_8());
		}
		    |
		kw='\u21A0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsTwoHeadedArrowKeyword_9());
		}
		    |
		kw='\u2916'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getRightwardsTwoHeadedArrowWithTailKeyword_10());
		}
		    |
		kw='\u00D7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTYPEOPERATORAccess().getMultiplicationSignKeyword_11());
		}
	)
;

// Entry rule entryRuleXTypePrimitive
entryRuleXTypePrimitive returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXTypePrimitiveRule()); }
	iv_ruleXTypePrimitive=ruleXTypePrimitive
	{ $current=$iv_ruleXTypePrimitive.current.getText(); }
	EOF;

// Rule XTypePrimitive
ruleXTypePrimitive returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getXTypePrimitiveAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw='BOOL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getBOOLKeyword_1());
		}
		    |
		kw='\u21151'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getDoubleStruckCapitalNDigitOneKeyword_2());
		}
		    |
		kw='\u2115'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getDoubleStruckCapitalNKeyword_3());
		}
		    |
		kw='\u2124'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getDoubleStruckCapitalZKeyword_4());
		}
		    |
		(
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getLeftParenthesisKeyword_5_0());
			}
			{
				newCompositeNode(grammarAccess.getXTypePrimitiveAccess().getXTypeParserRuleCall_5_1());
			}
			this_XType_6=ruleXType
			{
				$current.merge(this_XType_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getRightParenthesisKeyword_5_2());
			}
		)
		    |
		(
			kw='\u2119'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getDoubleStruckCapitalPKeyword_6_0());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getLeftParenthesisKeyword_6_1());
			}
			{
				newCompositeNode(grammarAccess.getXTypePrimitiveAccess().getXTypeParserRuleCall_6_2());
			}
			this_XType_10=ruleXType
			{
				$current.merge(this_XType_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getRightParenthesisKeyword_6_3());
			}
		)
		    |
		(
			kw='\u21191'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getDoubleStruckCapitalPDigitOneKeyword_7_0());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getLeftParenthesisKeyword_7_1());
			}
			{
				newCompositeNode(grammarAccess.getXTypePrimitiveAccess().getXTypeParserRuleCall_7_2());
			}
			this_XType_14=ruleXType
			{
				$current.merge(this_XType_14);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypePrimitiveAccess().getRightParenthesisKeyword_7_3());
			}
		)
	)
;

// Entry rule entryRuleEVENTB_IDENTIFIER_KEYWORD
entryRuleEVENTB_IDENTIFIER_KEYWORD returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_IDENTIFIER_KEYWORDRule()); }
	iv_ruleEVENTB_IDENTIFIER_KEYWORD=ruleEVENTB_IDENTIFIER_KEYWORD
	{ $current=$iv_ruleEVENTB_IDENTIFIER_KEYWORD.current.getText(); }
	EOF;

// Rule EVENTB_IDENTIFIER_KEYWORD
ruleEVENTB_IDENTIFIER_KEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BOOL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getBOOLKeyword_0());
		}
		    |
		kw='FALSE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getFALSEKeyword_1());
		}
		    |
		kw='TRUE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getTRUEKeyword_2());
		}
		    |
		kw='bool'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getBoolKeyword_3());
		}
		    |
		kw='card'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getCardKeyword_4());
		}
		    |
		kw='dom'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDomKeyword_5());
		}
		    |
		kw='finite'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getFiniteKeyword_6());
		}
		    |
		kw='id'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getIdKeyword_7());
		}
		    |
		kw='inter'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getInterKeyword_8());
		}
		    |
		kw='max'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getMaxKeyword_9());
		}
		    |
		kw='min'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getMinKeyword_10());
		}
		    |
		kw='mod'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getModKeyword_11());
		}
		    |
		kw='pred'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPredKeyword_12());
		}
		    |
		kw='prj1'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPrj1Keyword_13());
		}
		    |
		kw='prj2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPrj2Keyword_14());
		}
		    |
		kw='ran'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getRanKeyword_15());
		}
		    |
		kw='succ'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getSuccKeyword_16());
		}
		    |
		kw='union'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getUnionKeyword_17());
		}
		    |
		kw='\u21151'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalNDigitOneKeyword_18());
		}
		    |
		kw='\u2115'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalNKeyword_19());
		}
		    |
		kw='\u21191'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalPDigitOneKeyword_20());
		}
		    |
		kw='\u2119'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalPKeyword_21());
		}
		    |
		kw='\u2124'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalZKeyword_22());
		}
	)
;

// Entry rule entryRuleEVENTB_PREDICATE_SYMBOLS
entryRuleEVENTB_PREDICATE_SYMBOLS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_PREDICATE_SYMBOLSRule()); }
	iv_ruleEVENTB_PREDICATE_SYMBOLS=ruleEVENTB_PREDICATE_SYMBOLS
	{ $current=$iv_ruleEVENTB_PREDICATE_SYMBOLS.current.getText(); }
	EOF;

// Rule EVENTB_PREDICATE_SYMBOLS
ruleEVENTB_PREDICATE_SYMBOLS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLeftParenthesisKeyword_0());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getRightParenthesisKeyword_1());
		}
		    |
		kw='\u21D4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLeftRightDoubleArrowKeyword_2());
		}
		    |
		kw='\u21D2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getRightwardsDoubleArrowKeyword_3());
		}
		    |
		kw='\u2227'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLogicalAndKeyword_4());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getAmpersandKeyword_5());
		}
		    |
		kw='\u2228'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLogicalOrKeyword_6());
		}
		    |
		kw='\u00AC'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotSignKeyword_7());
		}
		    |
		kw='\u22A4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getDownTackKeyword_8());
		}
		    |
		kw='\u22A5'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getUpTackKeyword_9());
		}
		    |
		kw='\u2200'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getForAllKeyword_10());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getExclamationMarkKeyword_11());
		}
		    |
		kw='\u2203'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getThereExistsKeyword_12());
		}
		    |
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNumberSignKeyword_13());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getCommaKeyword_14());
		}
		    |
		kw='\u00B7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getMiddleDotKeyword_15());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getFullStopKeyword_16());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getEqualsSignKeyword_17());
		}
		    |
		kw='\u2260'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotEqualToKeyword_18());
		}
		    |
		kw='\u2264'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLessThanOrEqualToKeyword_19());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLessThanSignKeyword_20());
		}
		    |
		kw='\u2265'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getGreaterThanOrEqualToKeyword_21());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getGreaterThanSignKeyword_22());
		}
		    |
		kw='\u2208'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getElementOfKeyword_23());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getColonKeyword_24());
		}
		    |
		kw='\u2209'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotAnElementOfKeyword_25());
		}
		    |
		kw='\u2282'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getSubsetOfKeyword_26());
		}
		    |
		kw='\u2284'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotASubsetOfKeyword_27());
		}
		    |
		kw='\u2286'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getSubsetOfOrEqualToKeyword_28());
		}
		    |
		kw='\u2288'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNeitherASubsetOfNorEqualToKeyword_29());
		}
		    |
		kw='partition'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getPartitionKeyword_30());
		}
	)
;

// Entry rule entryRuleEVENTB_EXPRESSION_SYMBOLS
entryRuleEVENTB_EXPRESSION_SYMBOLS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_EXPRESSION_SYMBOLSRule()); }
	iv_ruleEVENTB_EXPRESSION_SYMBOLS=ruleEVENTB_EXPRESSION_SYMBOLS
	{ $current=$iv_ruleEVENTB_EXPRESSION_SYMBOLS.current.getText(); }
	EOF;

// Rule EVENTB_EXPRESSION_SYMBOLS
ruleEVENTB_EXPRESSION_SYMBOLS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\u2194'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftRightArrowKeyword_0());
		}
		    |
		kw='\uE100'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE100Keyword_1());
		}
		    |
		kw='\uE101'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE101Keyword_2());
		}
		    |
		kw='\uE102'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE102Keyword_3());
		}
		    |
		kw='\u21F8'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithVerticalStrokeKeyword_4());
		}
		    |
		kw='\u2192'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowKeyword_5());
		}
		    |
		kw='\u2914'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithTailWithVerticalStrokeKeyword_6());
		}
		    |
		kw='\u21A3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithTailKeyword_7());
		}
		    |
		kw='\u2900'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowWithVerticalStrokeKeyword_8());
		}
		    |
		kw='\u21A0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowKeyword_9());
		}
		    |
		kw='\u2916'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowWithTailKeyword_10());
		}
		    |
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftCurlyBracketKeyword_11());
		}
		    |
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightCurlyBracketKeyword_12());
		}
		    |
		kw='\u21A6'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowFromBarKeyword_13());
		}
		    |
		kw='\u2205'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getEmptySetKeyword_14());
		}
		    |
		kw='\u2229'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getIntersectionKeyword_15());
		}
		    |
		kw='\u222A'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getUnionKeyword_16());
		}
		    |
		kw='\u2216'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSetMinusKeyword_17());
		}
		    |
		kw='\u00D7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getMultiplicationSignKeyword_18());
		}
		    |
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftSquareBracketKeyword_19());
		}
		    |
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightSquareBracketKeyword_20());
		}
		    |
		kw='\uE103'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE103Keyword_21());
		}
		    |
		kw='\u2218'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRingOperatorKeyword_22());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSemicolonKeyword_23());
		}
		    |
		kw='\u2297'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getCircledTimesKeyword_24());
		}
		    |
		kw='\u2225'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getParallelToKeyword_25());
		}
		    |
		kw='\u223C'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getTildeOperatorKeyword_26());
		}
		    |
		kw='\u25C1'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getWhiteLeftPointingTriangleKeyword_27());
		}
		    |
		kw='\u2A64'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getZNotationDomainAntirestrictionKeyword_28());
		}
		    |
		kw='\u25B7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getWhiteRightPointingTriangleKeyword_29());
		}
		    |
		kw='\u2A65'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getZNotationRangeAntirestrictionKeyword_30());
		}
		    |
		kw='\u03BB'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getGreekSmallLetterLamdaKeyword_31());
		}
		    |
		(
			kw='%'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPercentSignKeyword_32_0());
			}
			kw='\u22C2'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getNAryIntersectionKeyword_32_1());
			}
		)
		    |
		kw='\u22C3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getNAryUnionKeyword_33());
		}
		    |
		kw='\u2223'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getDividesKeyword_34());
		}
		    |
		kw='\u2025'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getTwoDotLeaderKeyword_35());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPlusSignKeyword_36());
		}
		    |
		kw='\u2212'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getMinusSignKeyword_37());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getHyphenMinusKeyword_38());
		}
		    |
		kw='\u2217'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getAsteriskOperatorKeyword_39());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getAsteriskKeyword_40());
		}
		    |
		kw='\u00F7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getDivisionSignKeyword_41());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSolidusKeyword_42());
		}
		    |
		kw='^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getCircumflexAccentKeyword_43());
		}
		    |
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getBackslashKeyword_44());
		}
	)
;

// Entry rule entryRuleXRecord
entryRuleXRecord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXRecordRule()); }
	iv_ruleXRecord=ruleXRecord
	{ $current=$iv_ruleXRecord.current; }
	EOF;

// Rule XRecord
ruleXRecord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXRecordAccess().getRecordAction_0(),
					$current);
			}
		)
		otherlv_1='record'
		{
			newLeafNode(otherlv_1, grammarAccess.getXRecordAccess().getRecordKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXRecordAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXRecordRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xcontext.XContext.ID");
				}
			)
		)
		(
			otherlv_3='inherits'
			{
				newLeafNode(otherlv_3, grammarAccess.getXRecordAccess().getInheritsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXRecordRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getXRecordAccess().getSubsetsRecordCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXRecordAccess().getFieldsFieldParserRuleCall_4_0_0());
					}
					lv_fields_5_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXRecordRule());
						}
						add(
							$current,
							"fields",
							lv_fields_5_0,
							"ac.soton.xeventb.xcontext.XContext.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXRecordAccess().getFieldsFieldParserRuleCall_4_1_0());
					}
					lv_fields_6_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXRecordRule());
						}
						add(
							$current,
							"fields",
							lv_fields_6_0,
							"ac.soton.xeventb.xcontext.XContext.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleFieldType
entryRuleFieldType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFieldTypeRule()); }
	iv_ruleFieldType=ruleFieldType
	{ $current=$iv_ruleFieldType.current.getText(); }
	EOF;

// Rule FieldType
ruleFieldType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFieldTypeAccess().getIDTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldTypeAccess().getEVENTB_IDENTIFIER_KEYWORDParserRuleCall_1());
		}
		this_EVENTB_IDENTIFIER_KEYWORD_1=ruleEVENTB_IDENTIFIER_KEYWORD
		{
			$current.merge(this_EVENTB_IDENTIFIER_KEYWORD_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ac.soton.xeventb.xcontext.XContext.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getMultiplicityMultiplicityEnumRuleCall_2_0());
				}
				lv_multiplicity_2_0=ruleMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_2_0,
						"ac.soton.xeventb.xcontext.XContext.Multiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getTypeFieldTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleFieldType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"ac.soton.xeventb.xcontext.XContext.FieldType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule Multiplicity
ruleMultiplicity returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='one'
			{
				$current = grammarAccess.getMultiplicityAccess().getONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMultiplicityAccess().getONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='many'
			{
				$current = grammarAccess.getMultiplicityAccess().getMANYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMultiplicityAccess().getMANYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='opt'
			{
				$current = grammarAccess.getMultiplicityAccess().getOPTIONALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMultiplicityAccess().getOPTIONALEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'i'..'\uFFDC') ('a'..'z'|'A'..'Z'|'_'|'i'..'\uFFDC'|'0'..'9'|'\'')*;

RULE_UNTRANSLATED_TOKEN : ('!'|'#'|'%'|'&'|'*'|'-'|':'|'|'|'\\'|','|'~'|'/'|'.')+;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
