/*******************************************************************************
 * Copyright (c) 2016,2018 University of Southampton.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     University of Southampton - initial API and implementation
 *******************************************************************************/
module ac.soton.xeventb.xcontext.GenerateXContext

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.StandaloneSetup

var rootPath = ".."
var projectName = "ac.soton.xeventb.xcontext"
var runtimeProject = "../${projectName}"

Workflow {
	bean = StandaloneSetup {
		scanClassPath = true
		platformUri = "${runtimeProject}/.."//		registerGeneratedEPackage = "org.eventb.emf.core.CorePackage"
		registerGeneratedEPackage = "org.eventb.emf.core.context.ContextPackage"//		registerGeneratedEPackage = "org.eventb.emf.core.machine.MachinePackage"
		registerGenModelFile = "platform:/resource/org.eventb.emf.core/model/eventbcore.genmodel"//		registerGeneratedEPackage = "org.eclipse.emf.ecore.EcorePackage"
//		registerGeneratedEPackage = "org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage"
//		registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
//		registerGenModelFile = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
	}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "ac.soton.xeventb.xcontext"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "ac.soton.xeventb.xcontext.XContext"
			fileExtensions = "bucx"
			referencedResource = "platform:/resource/org.eventb.emf.core/model/eventbcore.genmodel"
			referencedResource = "platform:/resource/ac.soton.eventb.emf.record/model/record.genmodel"
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			//			fragment = org.eclipse.xtext.generator.adapter.FragmentAdapter {
			//				fragment = org.eclipse.xtext.generator.ecore2xtext.FormatterFragment {}
			//			}

			// @htson To avoid error
			// The code of method specialStateTransition(int, IntStream) is exceeding the 65535 bytes limit
			parserGenerator = {
				options = {
//					backtrack = false
					classSplitting = true
					fieldsPerClass = "500"
//					ignoreCase = false
//					memoize = true
				}
			}

			serializer = {
				generateStub = false
			}
			validator = {
			// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			//dd4g12: Added to generate formatter2
			formatter = {
				generateStub = true
			}
		}
	}
}
